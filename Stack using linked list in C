#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node {
int data;
struct node *next;
};
struct node *top = NULL;
void push() {
struct node *newnode = (struct node*)malloc(sizeof(struct node));
if (newnode == NULL) {
printf("Unsuccessfull memory allocation\n");
}
else {
int element;
printf("Enter element\n");
scanf("%d", &element);
newnode->data = element;
newnode->next = NULL;
if (top == NULL) {
top = newnode;
}
else {
newnode->next = top;
top = newnode;
}
}
printf("Element added is %d",newnode->data);
}
void peek() {
if (top == NULL) {
printf("Stack is empty\n");
}
else {
printf("Topmost element is %d\n", top->data);
}
}
void pop() {
if (top == NULL) {
printf("Stack is empty\n");
}
else {
struct node *temp = top;
printf("Element deleted is %d\n", top->data);
top = top->next;
free(temp);
}
}
void display() {
if (top == NULL) {
printf("Stack is empty\n");
}
else {
struct node *temp = top;
while (temp != NULL) {
printf("%d\t", temp->data);
temp = temp->next;
}
}
}
void main()
{
int choice;
while (1) {
printf("\n1.Push\n2.Pop\n3.Peek\n4.Display\n5.Exit\n");
scanf("%d", &choice);
switch (choice) {
case 1:
push();
break;
case 2:
pop();
break;
case 3:
peek();
break;
case 4:
display();
break;
case 5:
exit(0);
default:
printf("invalid choice");
break;
}
}
}
